use crate::traits::job_enum::JobEnum;
use crate::traits::random_enum::RandomEnum;
use serde::{Deserialize, Serialize};
use strum::EnumIter;
use strum::FromRepr;
use strum::{Display, EnumCount};
use utoipa::ToSchema;

#[derive(
    Serialize,
    FromRepr,
    Deserialize,
    EnumCount,
    Default,
    ToSchema,
    EnumIter,
    Clone,
    Debug,
    Eq,
    PartialEq,
    Hash,
    Display,
)]
pub enum PfJob {
    Alchemist,
    AnimalTrainer,
    #[default]
    Apothecary,
    Archer,
    Armorer,
    Artificer,
    Assassin,
    Astrologer,
    Baker,
    Barkeep,
    Baron,
    BeastHunter,
    Beekeeper,
    Beggar,
    Blacksmith,
    Boatwright,
    BoneCarver,
    BountyHunter,
    Brewer,
    Brigand,
    Butcher,
    Candlemaker,
    Carpenter,
    Cartographer,
    Chamberlain,
    Chandler,
    Chancellor,
    Charlatan,
    Chef,
    Cleric,
    Cobbler,
    Conjurer,
    Cook,
    Cooper,
    Courier,
    CourtJester,
    CourtWizard,
    Crystalmancer,
    Cultist,
    Cutpurse,
    Dancer,
    Diplomat,
    Diviner,
    Dockworker,
    Druid,
    Duke,
    Enchanter,
    Engineer,
    Executioner,
    Exorcist,
    Explorer,
    Falconer,
    Farmer,
    Fence,
    Fisherman,
    Fletcher,
    Florist,
    FortuneTeller,
    Gambler,
    Gardener,
    Gladiator,
    Glassblower,
    Gravekeeper,
    Gravedigger,
    GuildMaster,
    Gunsmith,
    Handmaiden,
    Healer,
    Herald,
    Hermit,
    Herbalist,
    Highwayman,
    Historian,
    Hunter,
    Illusionist,
    Innkeeper,
    Inventor,
    Jailer,
    Jester,
    Jeweler,
    Knight,
    LadyInWaiting,
    Lancer,
    Leatherworker,
    Librarian,
    Locksmith,
    Lord,
    Mage,
    Magister,
    Maid,
    Mapmaker,
    Marshal,
    Mason,
    Mercenary,
    Merchant,
    Messenger,
    Midwife,
    Miller,
    Minstrel,
    Missionary,
    Monk,
    MonsterHunter,
    Mortician,
    Mystic,
    Necromancer,
    Noble,
    Oracle,
    Outlaw,
    Paladin,
    Painter,
    Pariah,
    Pathfinder,
    Peasant,
    Philosopher,
    Pirate,
    PlagueDoctor,
    Poet,
    Porter,
    PotionMaker,
    Priest,
    Prince,
    Princess,
    Prophet,
    Prospector,
    Queen,
    Ranger,
    RatCatcher,
    Rebel,
    Refugee,
    Riddlemaster,
    Rogue,
    RoyalGuard,
    Runecaster,
    Sage,
    Sailor,
    Sapper,
    Scribe,
    Sculptor,
    Seer,
    Servant,
    Shepherd,
    Sheriff,
    Shipwright,
    Shoemaker,
    Shopkeeper,
    Shoveler,
    Silversmith,
    Smith,
    Smuggler,
    Soothsayer,
    Sorcerer,
    Squire,
    Stablehand,
    Steward,
    Stonemason,
    Storyteller,
    StreetPerformer,
    Summoner,
    Swordsmith,
    Tailor,
    Tanner,
    TaxCollector,
    Thief,
    Thug,
    Tinker,
    Torturer,
    TownCrier,
    Trader,
    Trapper,
    TreasureHunter,
    TribalChieftain,
    Troubadour,
    UndeadHunter,
    Undertaker,
    Vagabond,
    Valet,
    Vintner,
    Wainwright,
    Warlock,
    Warlord,
    Warrior,
    Washerwoman,
    Watchman,
    WeaponMaster,
    Weaver,
    Witch,
    WitchHunter,
    Wizard,
    Woodsman,
    Wretch,
    Zealot,
    Zoologist,
    BoneCollector,
    FireEater,
}

impl RandomEnum for PfJob {
    fn from_repr(value: usize) -> Option<Self> {
        Self::from_repr(value)
    }
}

#[derive(
    Serialize,
    FromRepr,
    Deserialize,
    EnumCount,
    Default,
    ToSchema,
    EnumIter,
    Clone,
    Debug,
    Eq,
    PartialEq,
    Hash,
    Display,
)]
pub enum SfJob {
    BountyHunter,
    Freelancer,
    Smuggler,
    #[default]
    Pirate,
    Mercenary,
    Soldier,
    StarshipPilot,
    Engineer,
    Technician,
    Scientist,
    Biologist,
    Chemist,
    Physicist,
    Navigator,
    Doctor,
    Medic,
    Hacker,
    Diplomat,
    Trader,
    Merchant,
    Archaeologist,
    Explorer,
    Scout,
    Researcher,
    Psionic,
    Mystic,
    Technomancer,
    MysticHealer,
    LawOfficer,
    SecurityOfficer,
    MechPilot,
    RoboticsEngineer,
    RoboticsOperator,
    Salvager,
    Miner,
    SpaceMarine,
    SpaceMonk,
    Astrologer,
    Historian,
    Courier,
    Chef,
    Farmer,
    Shipwright,
    ShipAISpecialist,
    DroneOperator,
    OrbitalDockworker,
    JumpgateTechnician,
    CorporateExecutive,
    CorporateMercenary,
    SolarCultist,
    Xenozoologist,
    Pilot,
    NavigatorAssistant,
    WeaponsSpecialist,
    ArmorTechnician,
    SpaceMedic,
    CombatEngineer,
    CommunicationsOfficer,
    IntelligenceOfficer,
    ResearchScientist,
    PlanetaryGeologist,
    Astrophysicist,
    Pharmacologist,
    Cyberneticist,
    StarshipMechanic,
    StarshipEngineer,
    StarshipTactician,
    StarshipGunner,
    StarshipNavigator,
    StarshipCommunications,
    StarshipOperations,
    CargoTechnician,
    LogisticsOfficer,
    Quartermaster,
    SupplyOfficer,
    Exobiologist,
    Xenobotanist,
    Xenologist,
    Linguist,
    Anthropologist,
    Psychologist,
    Counselor,
    HistorianArchivist,
    Archivist,
    Curator,
    DiplomaticAttachÃ©,
    CorporateSpy,
    IntelligenceAnalyst,
    SecurityConsultant,
    SystemsEngineer,
    ComputerProgrammer,
    AIOperator,
    DroidTechnician,
    MaintenanceTechnician,
    MinerSupervisor,
    SpaceTrader,
    ShuttlePilot,
    StellarCartographer,
    AsteroidSurveyor,
    OrbitalFarmer,
    HydroponicsTechnician,
    CommunicationsTechnician,
    MedicalTechnician,
    HospitalAdministrator,
    EnvironmentalEngineer,
    PlanetarySurveyor,
    ResearchAssistant,
}

impl RandomEnum for SfJob {
    fn from_repr(value: usize) -> Option<Self> {
        Self::from_repr(value)
    }
}

impl JobEnum for SfJob {}

impl JobEnum for PfJob {}
